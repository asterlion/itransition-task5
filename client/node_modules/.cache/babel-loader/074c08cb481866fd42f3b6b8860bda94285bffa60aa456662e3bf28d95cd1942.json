{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u041F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044C\\\\IdeaProjects\\\\fakedatagenerator\\\\client\\\\src\\\\components\\\\RandomDataGenerator.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './RandomDataGenerator.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RandomDataGenerator = () => {\n  _s();\n  const [region, setRegion] = useState('');\n  const [errors, setErrors] = useState(0);\n  const [seed, setSeed] = useState('');\n  const [page, setPage] = useState(1);\n  const [data, setData] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  // Функция для загрузки данных\n  const loadData = async pageNum => {\n    try {\n      setIsLoading(true);\n      const response = await axios.post('http://localhost:3000/generate', {\n        region,\n        errors,\n        seed,\n        page: pageNum,\n        limit: 10\n      });\n      setData(prevData => [...prevData, ...response.data]);\n    } catch (error) {\n      console.error('Error loading data:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const generateRandomSeed = async () => {\n    try {\n      const response = await axios.get('http://localhost:3000/random-seed');\n      setSeed(response.data.seed);\n    } catch (error) {\n      console.error('Error generating random seed:', error);\n    }\n  };\n  const handleScroll = e => {\n    const {\n      scrollTop,\n      scrollHeight,\n      clientHeight\n    } = e.target;\n    if (scrollHeight - scrollTop === clientHeight && !isLoading) {\n      const nextPage = page + 1;\n      setPage(nextPage);\n      loadData(nextPage);\n    }\n  };\n  const handleGenerate = async () => {\n    setData([]);\n    setPage(1);\n    loadData(1);\n  };\n  const exportToCSV = () => {\n    const csvRows = [];\n    const headers = ['#', 'UUID', 'Name', 'Address', 'Phone'];\n    csvRows.push(headers.join(','));\n    data.forEach((item, index) => {\n      const row = [index + 1, item.uuid, item.name, item.address, item.phone];\n      csvRows.push(row.join(','));\n    });\n    const csvContent = csvRows.join('\\n');\n    const blob = new Blob([csvContent], {\n      type: 'text/csv'\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'generated_data.csv';\n    a.click();\n    URL.revokeObjectURL(url);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header-row d-flex justify-content-between align-items-center mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"mb-0\",\n        children: \"Random Data Generator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: exportToCSV,\n        children: \"Export CSV\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group mb-2\",\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"form-control\",\n          value: region,\n          onChange: e => setRegion(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Language\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"en\",\n            children: \"English\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"de\",\n            children: \"Deutsch\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"pl\",\n            children: \"Polski\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group mb-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          className: \"slider\",\n          min: \"0\",\n          max: \"10\",\n          step: \"0.25\",\n          value: errors,\n          onChange: e => setErrors(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          className: \"form-control\",\n          placeholder: \"Error Count\",\n          min: \"0\",\n          max: \"1000\",\n          value: errors,\n          onChange: e => setErrors(e.target.value),\n          inputMode: \"decimal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group mb-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          placeholder: \"Seed\",\n          value: seed,\n          readOnly: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-secondary ml-2\",\n          onClick: generateRandomSeed,\n          children: \"Random Seed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: handleGenerate,\n          children: \"Generate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-container\",\n      onScroll: handleScroll,\n      children: [/*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-striped\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          className: \"thead-dark\",\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"#\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"UUID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Phone\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: data.map((item, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: index + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.uuid\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.address\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.phone\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 29\n            }, this)]\n          }, item.uuid, true, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 31\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n};\n_s(RandomDataGenerator, \"HVlH13T6HEEbd4CVhLF0FnZZOD4=\");\n_c = RandomDataGenerator;\nexport default RandomDataGenerator;\nvar _c;\n$RefreshReg$(_c, \"RandomDataGenerator\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","RandomDataGenerator","_s","region","setRegion","errors","setErrors","seed","setSeed","page","setPage","data","setData","isLoading","setIsLoading","loadData","pageNum","response","post","limit","prevData","error","console","generateRandomSeed","get","handleScroll","e","scrollTop","scrollHeight","clientHeight","target","nextPage","handleGenerate","exportToCSV","csvRows","headers","push","join","forEach","item","index","row","uuid","name","address","phone","csvContent","blob","Blob","type","url","URL","createObjectURL","a","document","createElement","href","download","click","revokeObjectURL","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","value","onChange","min","max","step","placeholder","inputMode","readOnly","onScroll","map","_c","$RefreshReg$"],"sources":["C:/Users/Пользователь/IdeaProjects/fakedatagenerator/client/src/components/RandomDataGenerator.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport './RandomDataGenerator.css';\r\n\r\nconst RandomDataGenerator = () => {\r\n    const [region, setRegion] = useState('');\r\n    const [errors, setErrors] = useState(0);\r\n    const [seed, setSeed] = useState('');\r\n    const [page, setPage] = useState(1);\r\n    const [data, setData] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    // Функция для загрузки данных\r\n    const loadData = async (pageNum) => {\r\n        try {\r\n            setIsLoading(true);\r\n            const response = await axios.post('http://localhost:3000/generate', {\r\n                region,\r\n                errors,\r\n                seed,\r\n                page: pageNum,\r\n                limit: 10,\r\n            });\r\n            setData((prevData) => [...prevData, ...response.data]);\r\n        } catch (error) {\r\n            console.error('Error loading data:', error);\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    const generateRandomSeed = async () => {\r\n        try {\r\n            const response = await axios.get('http://localhost:3000/random-seed');\r\n            setSeed(response.data.seed);\r\n        } catch (error) {\r\n            console.error('Error generating random seed:', error);\r\n        }\r\n    };\r\n\r\n    const handleScroll = (e) => {\r\n        const { scrollTop, scrollHeight, clientHeight } = e.target;\r\n        if (scrollHeight - scrollTop === clientHeight && !isLoading) {\r\n            const nextPage = page + 1;\r\n            setPage(nextPage);\r\n            loadData(nextPage);\r\n        }\r\n    };\r\n\r\n    const handleGenerate = async () => {\r\n        setData([]);\r\n        setPage(1);\r\n        loadData(1);\r\n    };\r\n\r\n    const exportToCSV = () => {\r\n        const csvRows = [];\r\n        const headers = ['#', 'UUID', 'Name', 'Address', 'Phone'];\r\n        csvRows.push(headers.join(','));\r\n\r\n        data.forEach((item, index) => {\r\n            const row = [\r\n                index + 1,\r\n                item.uuid,\r\n                item.name,\r\n                item.address,\r\n                item.phone,\r\n            ];\r\n            csvRows.push(row.join(','));\r\n        });\r\n\r\n        const csvContent = csvRows.join('\\n');\r\n        const blob = new Blob([csvContent], { type: 'text/csv' });\r\n        const url = URL.createObjectURL(blob);\r\n        const a = document.createElement('a');\r\n        a.href = url;\r\n        a.download = 'generated_data.csv';\r\n        a.click();\r\n        URL.revokeObjectURL(url);\r\n    };\r\n\r\n    return (\r\n        <div className=\"container mt-4\">\r\n            <div className=\"header-row d-flex justify-content-between align-items-center mb-3\">\r\n                <h3 className=\"mb-0\">Random Data Generator</h3>\r\n                <button className=\"btn btn-primary\" onClick={exportToCSV}>\r\n                    Export CSV\r\n                </button>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <div className=\"input-group mb-2\">\r\n                    <select\r\n                        className=\"form-control\"\r\n                        value={region}\r\n                        onChange={(e) => setRegion(e.target.value)}\r\n                    >\r\n                        <option value=\"\">Select Language</option>\r\n                        <option value=\"en\">English</option>\r\n                        <option value=\"de\">Deutsch</option>\r\n                        <option value=\"pl\">Polski</option>\r\n                    </select>\r\n                </div>\r\n\r\n                <div className=\"input-group mb-2\">\r\n                    <input\r\n                        type=\"range\"\r\n                        className=\"slider\"\r\n                        min=\"0\"\r\n                        max=\"10\"\r\n                        step=\"0.25\"\r\n                        value={errors}\r\n                        onChange={(e) => setErrors(e.target.value)}\r\n                    />\r\n                    <input\r\n                        type=\"number\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Error Count\"\r\n                        min=\"0\"\r\n                        max=\"1000\"\r\n                        value={errors}\r\n                        onChange={(e) => setErrors(e.target.value)}\r\n                        inputMode=\"decimal\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"input-group mb-2\">\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Seed\"\r\n                        value={seed}\r\n                        readOnly\r\n                    />\r\n                    <button\r\n                        className=\"btn btn-secondary ml-2\"\r\n                        onClick={generateRandomSeed}\r\n                    >\r\n                        Random Seed\r\n                    </button>\r\n                </div>\r\n\r\n                <div className=\"button-container\">\r\n                    <button\r\n                        className=\"btn btn-primary\"\r\n                        onClick={handleGenerate}\r\n                    >\r\n                        Generate\r\n                    </button>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"table-container\" onScroll={handleScroll}>\r\n                <table className=\"table table-striped\">\r\n                    <thead className=\"thead-dark\">\r\n                    <tr>\r\n                        <th>#</th>\r\n                        <th>UUID</th>\r\n                        <th>Name</th>\r\n                        <th>Address</th>\r\n                        <th>Phone</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {data.map((item, index) => (\r\n                        <tr key={item.uuid}>\r\n                            <td>{index + 1}</td>\r\n                            <td>{item.uuid}</td>\r\n                            <td>{item.name}</td>\r\n                            <td>{item.address}</td>\r\n                            <td>{item.phone}</td>\r\n                        </tr>\r\n                    ))}\r\n                    </tbody>\r\n                </table>\r\n\r\n                {isLoading && <div>Loading...</div>}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RandomDataGenerator;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACQ,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EACvC,MAAM,CAACU,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACY,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC;EACnC,MAAM,CAACc,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACgB,SAAS,EAAEC,YAAY,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;;EAEjD;EACA,MAAMkB,QAAQ,GAAG,MAAOC,OAAO,IAAK;IAChC,IAAI;MACAF,YAAY,CAAC,IAAI,CAAC;MAClB,MAAMG,QAAQ,GAAG,MAAMnB,KAAK,CAACoB,IAAI,CAAC,gCAAgC,EAAE;QAChEf,MAAM;QACNE,MAAM;QACNE,IAAI;QACJE,IAAI,EAAEO,OAAO;QACbG,KAAK,EAAE;MACX,CAAC,CAAC;MACFP,OAAO,CAAEQ,QAAQ,IAAK,CAAC,GAAGA,QAAQ,EAAE,GAAGH,QAAQ,CAACN,IAAI,CAAC,CAAC;IAC1D,CAAC,CAAC,OAAOU,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC/C,CAAC,SAAS;MACNP,YAAY,CAAC,KAAK,CAAC;IACvB;EACJ,CAAC;EAED,MAAMS,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI;MACA,MAAMN,QAAQ,GAAG,MAAMnB,KAAK,CAAC0B,GAAG,CAAC,mCAAmC,CAAC;MACrEhB,OAAO,CAACS,QAAQ,CAACN,IAAI,CAACJ,IAAI,CAAC;IAC/B,CAAC,CAAC,OAAOc,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACzD;EACJ,CAAC;EAED,MAAMI,YAAY,GAAIC,CAAC,IAAK;IACxB,MAAM;MAAEC,SAAS;MAAEC,YAAY;MAAEC;IAAa,CAAC,GAAGH,CAAC,CAACI,MAAM;IAC1D,IAAIF,YAAY,GAAGD,SAAS,KAAKE,YAAY,IAAI,CAAChB,SAAS,EAAE;MACzD,MAAMkB,QAAQ,GAAGtB,IAAI,GAAG,CAAC;MACzBC,OAAO,CAACqB,QAAQ,CAAC;MACjBhB,QAAQ,CAACgB,QAAQ,CAAC;IACtB;EACJ,CAAC;EAED,MAAMC,cAAc,GAAG,MAAAA,CAAA,KAAY;IAC/BpB,OAAO,CAAC,EAAE,CAAC;IACXF,OAAO,CAAC,CAAC,CAAC;IACVK,QAAQ,CAAC,CAAC,CAAC;EACf,CAAC;EAED,MAAMkB,WAAW,GAAGA,CAAA,KAAM;IACtB,MAAMC,OAAO,GAAG,EAAE;IAClB,MAAMC,OAAO,GAAG,CAAC,GAAG,EAAE,MAAM,EAAE,MAAM,EAAE,SAAS,EAAE,OAAO,CAAC;IACzDD,OAAO,CAACE,IAAI,CAACD,OAAO,CAACE,IAAI,CAAC,GAAG,CAAC,CAAC;IAE/B1B,IAAI,CAAC2B,OAAO,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;MAC1B,MAAMC,GAAG,GAAG,CACRD,KAAK,GAAG,CAAC,EACTD,IAAI,CAACG,IAAI,EACTH,IAAI,CAACI,IAAI,EACTJ,IAAI,CAACK,OAAO,EACZL,IAAI,CAACM,KAAK,CACb;MACDX,OAAO,CAACE,IAAI,CAACK,GAAG,CAACJ,IAAI,CAAC,GAAG,CAAC,CAAC;IAC/B,CAAC,CAAC;IAEF,MAAMS,UAAU,GAAGZ,OAAO,CAACG,IAAI,CAAC,IAAI,CAAC;IACrC,MAAMU,IAAI,GAAG,IAAIC,IAAI,CAAC,CAACF,UAAU,CAAC,EAAE;MAAEG,IAAI,EAAE;IAAW,CAAC,CAAC;IACzD,MAAMC,GAAG,GAAGC,GAAG,CAACC,eAAe,CAACL,IAAI,CAAC;IACrC,MAAMM,CAAC,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;IACrCF,CAAC,CAACG,IAAI,GAAGN,GAAG;IACZG,CAAC,CAACI,QAAQ,GAAG,oBAAoB;IACjCJ,CAAC,CAACK,KAAK,CAAC,CAAC;IACTP,GAAG,CAACQ,eAAe,CAACT,GAAG,CAAC;EAC5B,CAAC;EAED,oBACIlD,OAAA;IAAK4D,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC3B7D,OAAA;MAAK4D,SAAS,EAAC,mEAAmE;MAAAC,QAAA,gBAC9E7D,OAAA;QAAI4D,SAAS,EAAC,MAAM;QAAAC,QAAA,EAAC;MAAqB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC/CjE,OAAA;QAAQ4D,SAAS,EAAC,iBAAiB;QAACM,OAAO,EAAEjC,WAAY;QAAA4B,QAAA,EAAC;MAE1D;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC,eAENjE,OAAA;MAAK4D,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACvB7D,OAAA;QAAK4D,SAAS,EAAC,kBAAkB;QAAAC,QAAA,eAC7B7D,OAAA;UACI4D,SAAS,EAAC,cAAc;UACxBO,KAAK,EAAEhE,MAAO;UACdiE,QAAQ,EAAG1C,CAAC,IAAKtB,SAAS,CAACsB,CAAC,CAACI,MAAM,CAACqC,KAAK,CAAE;UAAAN,QAAA,gBAE3C7D,OAAA;YAAQmE,KAAK,EAAC,EAAE;YAAAN,QAAA,EAAC;UAAe;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACzCjE,OAAA;YAAQmE,KAAK,EAAC,IAAI;YAAAN,QAAA,EAAC;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACnCjE,OAAA;YAAQmE,KAAK,EAAC,IAAI;YAAAN,QAAA,EAAC;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACnCjE,OAAA;YAAQmE,KAAK,EAAC,IAAI;YAAAN,QAAA,EAAC;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9B;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CAAC,eAENjE,OAAA;QAAK4D,SAAS,EAAC,kBAAkB;QAAAC,QAAA,gBAC7B7D,OAAA;UACIiD,IAAI,EAAC,OAAO;UACZW,SAAS,EAAC,QAAQ;UAClBS,GAAG,EAAC,GAAG;UACPC,GAAG,EAAC,IAAI;UACRC,IAAI,EAAC,MAAM;UACXJ,KAAK,EAAE9D,MAAO;UACd+D,QAAQ,EAAG1C,CAAC,IAAKpB,SAAS,CAACoB,CAAC,CAACI,MAAM,CAACqC,KAAK;QAAE;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9C,CAAC,eACFjE,OAAA;UACIiD,IAAI,EAAC,QAAQ;UACbW,SAAS,EAAC,cAAc;UACxBY,WAAW,EAAC,aAAa;UACzBH,GAAG,EAAC,GAAG;UACPC,GAAG,EAAC,MAAM;UACVH,KAAK,EAAE9D,MAAO;UACd+D,QAAQ,EAAG1C,CAAC,IAAKpB,SAAS,CAACoB,CAAC,CAACI,MAAM,CAACqC,KAAK,CAAE;UAC3CM,SAAS,EAAC;QAAS;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eAENjE,OAAA;QAAK4D,SAAS,EAAC,kBAAkB;QAAAC,QAAA,gBAC7B7D,OAAA;UACIiD,IAAI,EAAC,MAAM;UACXW,SAAS,EAAC,cAAc;UACxBY,WAAW,EAAC,MAAM;UAClBL,KAAK,EAAE5D,IAAK;UACZmE,QAAQ;QAAA;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACX,CAAC,eACFjE,OAAA;UACI4D,SAAS,EAAC,wBAAwB;UAClCM,OAAO,EAAE3C,kBAAmB;UAAAsC,QAAA,EAC/B;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CAAC,eAENjE,OAAA;QAAK4D,SAAS,EAAC,kBAAkB;QAAAC,QAAA,eAC7B7D,OAAA;UACI4D,SAAS,EAAC,iBAAiB;UAC3BM,OAAO,EAAElC,cAAe;UAAA6B,QAAA,EAC3B;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eAENjE,OAAA;MAAK4D,SAAS,EAAC,iBAAiB;MAACe,QAAQ,EAAElD,YAAa;MAAAoC,QAAA,gBACpD7D,OAAA;QAAO4D,SAAS,EAAC,qBAAqB;QAAAC,QAAA,gBAClC7D,OAAA;UAAO4D,SAAS,EAAC,YAAY;UAAAC,QAAA,eAC7B7D,OAAA;YAAA6D,QAAA,gBACI7D,OAAA;cAAA6D,QAAA,EAAI;YAAC;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACVjE,OAAA;cAAA6D,QAAA,EAAI;YAAI;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACbjE,OAAA;cAAA6D,QAAA,EAAI;YAAI;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACbjE,OAAA;cAAA6D,QAAA,EAAI;YAAO;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAChBjE,OAAA;cAAA6D,QAAA,EAAI;YAAK;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACd;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC,eACRjE,OAAA;UAAA6D,QAAA,EACClD,IAAI,CAACiE,GAAG,CAAC,CAACrC,IAAI,EAAEC,KAAK,kBAClBxC,OAAA;YAAA6D,QAAA,gBACI7D,OAAA;cAAA6D,QAAA,EAAKrB,KAAK,GAAG;YAAC;cAAAsB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACpBjE,OAAA;cAAA6D,QAAA,EAAKtB,IAAI,CAACG;YAAI;cAAAoB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACpBjE,OAAA;cAAA6D,QAAA,EAAKtB,IAAI,CAACI;YAAI;cAAAmB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACpBjE,OAAA;cAAA6D,QAAA,EAAKtB,IAAI,CAACK;YAAO;cAAAkB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACvBjE,OAAA;cAAA6D,QAAA,EAAKtB,IAAI,CAACM;YAAK;cAAAiB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC;UAAA,GALhB1B,IAAI,CAACG,IAAI;YAAAoB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAMd,CACP;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACK,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,EAEPpD,SAAS,iBAAIb,OAAA;QAAA6D,QAAA,EAAK;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAAC/D,EAAA,CAhLID,mBAAmB;AAAA4E,EAAA,GAAnB5E,mBAAmB;AAkLzB,eAAeA,mBAAmB;AAAC,IAAA4E,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}