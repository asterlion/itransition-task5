{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u041F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044C\\\\IdeaProjects\\\\fakedatagenerator\\\\client\\\\src\\\\components\\\\RandomDataGenerator.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RandomDataGenerator = () => {\n  _s();\n  const [language, setLanguage] = useState('');\n  const [errors, setErrors] = useState(0);\n  const [seed, setSeed] = useState('');\n  const [page, setPage] = useState(1);\n  const [data, setData] = useState([]);\n  const handleGenerate = async () => {\n    try {\n      const response = await axios.post('http://localhost:3000/generate', {\n        region: language,\n        // Передаем выбранный язык как регион\n        errors,\n        seed,\n        page\n      });\n      setData(response.data);\n    } catch (error) {\n      console.error('Error generating data:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Random Data Generator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: language,\n      onChange: e => setLanguage(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select Language\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"en\",\n        children: \"English\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"de\",\n        children: \"Deutsch\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"pl\",\n        children: \"Polski\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      placeholder: \"Error Count\",\n      value: errors,\n      onChange: e => setErrors(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Seed\",\n      value: seed,\n      onChange: e => setSeed(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      placeholder: \"Page Number\",\n      value: page,\n      onChange: e => setPage(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGenerate,\n      children: \"Generate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Generated Data:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: data.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [item.name, \", \", item.address, \", \", item.phone]\n      }, item.uuid, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n_s(RandomDataGenerator, \"XRuFXWNPCrVM1GYeH6dzsZ23ce0=\");\n_c = RandomDataGenerator;\nexport default RandomDataGenerator;\nvar _c;\n$RefreshReg$(_c, \"RandomDataGenerator\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","RandomDataGenerator","_s","language","setLanguage","errors","setErrors","seed","setSeed","page","setPage","data","setData","handleGenerate","response","post","region","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","type","placeholder","onClick","map","item","name","address","phone","uuid","_c","$RefreshReg$"],"sources":["C:/Users/Пользователь/IdeaProjects/fakedatagenerator/client/src/components/RandomDataGenerator.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst RandomDataGenerator = () => {\r\n    const [language, setLanguage] = useState('');\r\n    const [errors, setErrors] = useState(0);\r\n    const [seed, setSeed] = useState('');\r\n    const [page, setPage] = useState(1);\r\n    const [data, setData] = useState([]);\r\n\r\n    const handleGenerate = async () => {\r\n        try {\r\n            const response = await axios.post('http://localhost:3000/generate', {\r\n                region: language, // Передаем выбранный язык как регион\r\n                errors,\r\n                seed,\r\n                page,\r\n            });\r\n            setData(response.data);\r\n        } catch (error) {\r\n            console.error('Error generating data:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Random Data Generator</h1>\r\n            <select value={language} onChange={(e) => setLanguage(e.target.value)}>\r\n                <option value=\"\">Select Language</option>\r\n                <option value=\"en\">English</option>\r\n                <option value=\"de\">Deutsch</option>\r\n                <option value=\"pl\">Polski</option>\r\n            </select>\r\n            <input\r\n                type=\"number\"\r\n                placeholder=\"Error Count\"\r\n                value={errors}\r\n                onChange={(e) => setErrors(e.target.value)}\r\n            />\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Seed\"\r\n                value={seed}\r\n                onChange={(e) => setSeed(e.target.value)}\r\n            />\r\n            <input\r\n                type=\"number\"\r\n                placeholder=\"Page Number\"\r\n                value={page}\r\n                onChange={(e) => setPage(e.target.value)}\r\n            />\r\n            <button onClick={handleGenerate}>Generate</button>\r\n\r\n            <h2>Generated Data:</h2>\r\n            <ul>\r\n                {data.map((item) => (\r\n                    <li key={item.uuid}>\r\n                        {item.name}, {item.address}, {item.phone}\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RandomDataGenerator;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACQ,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EACvC,MAAM,CAACU,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACY,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC;EACnC,MAAM,CAACc,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMgB,cAAc,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,IAAI,CAAC,gCAAgC,EAAE;QAChEC,MAAM,EAAEb,QAAQ;QAAE;QAClBE,MAAM;QACNE,IAAI;QACJE;MACJ,CAAC,CAAC;MACFG,OAAO,CAACE,QAAQ,CAACH,IAAI,CAAC;IAC1B,CAAC,CAAC,OAAOM,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAClD;EACJ,CAAC;EAED,oBACIjB,OAAA;IAAAmB,QAAA,gBACInB,OAAA;MAAAmB,QAAA,EAAI;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC9BvB,OAAA;MAAQwB,KAAK,EAAErB,QAAS;MAACsB,QAAQ,EAAGC,CAAC,IAAKtB,WAAW,CAACsB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAAAL,QAAA,gBAClEnB,OAAA;QAAQwB,KAAK,EAAC,EAAE;QAAAL,QAAA,EAAC;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACzCvB,OAAA;QAAQwB,KAAK,EAAC,IAAI;QAAAL,QAAA,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACnCvB,OAAA;QAAQwB,KAAK,EAAC,IAAI;QAAAL,QAAA,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACnCvB,OAAA;QAAQwB,KAAK,EAAC,IAAI;QAAAL,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CAAC,eACTvB,OAAA;MACI4B,IAAI,EAAC,QAAQ;MACbC,WAAW,EAAC,aAAa;MACzBL,KAAK,EAAEnB,MAAO;MACdoB,QAAQ,EAAGC,CAAC,IAAKpB,SAAS,CAACoB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC,eACFvB,OAAA;MACI4B,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,MAAM;MAClBL,KAAK,EAAEjB,IAAK;MACZkB,QAAQ,EAAGC,CAAC,IAAKlB,OAAO,CAACkB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC,eACFvB,OAAA;MACI4B,IAAI,EAAC,QAAQ;MACbC,WAAW,EAAC,aAAa;MACzBL,KAAK,EAAEf,IAAK;MACZgB,QAAQ,EAAGC,CAAC,IAAKhB,OAAO,CAACgB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC,eACFvB,OAAA;MAAQ8B,OAAO,EAAEjB,cAAe;MAAAM,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAElDvB,OAAA;MAAAmB,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxBvB,OAAA;MAAAmB,QAAA,EACKR,IAAI,CAACoB,GAAG,CAAEC,IAAI,iBACXhC,OAAA;QAAAmB,QAAA,GACKa,IAAI,CAACC,IAAI,EAAC,IAAE,EAACD,IAAI,CAACE,OAAO,EAAC,IAAE,EAACF,IAAI,CAACG,KAAK;MAAA,GADnCH,IAAI,CAACI,IAAI;QAAAhB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEd,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd,CAAC;AAACrB,EAAA,CA5DID,mBAAmB;AAAAoC,EAAA,GAAnBpC,mBAAmB;AA8DzB,eAAeA,mBAAmB;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}